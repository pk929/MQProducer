server.servlet.context-path=/mqproducer
server.port=8386


#=============== consumer  =======================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.242.128:9092
# kafka集群配置
#spring.kafka.bootstrap-servers=192.168.242.128:9092,192.168.242.128:9093,192.168.242.128:9094
# 指定默认消费者group id
spring.kafka.consumer.group-id=pkuokuo
#最早未被消费的offset earliest
spring.kafka.consumer.auto-offset-reset=earliest
#是否开启自动提交
spring.kafka.consumer.enable-auto-commit=false
#当enable-auto-commit为true时生效
#自动提交的间隔时间
spring.kafka.consumer.auto-commit-interval=100
#当enable-auto-commit为false时生效
#设置消费提交方式为手动提交
spring.kafka.listener.ack-mode=MANUAL
#当ackMode为“COUNT”或“COUNT_TIME”时，偏移提交之间的记录数
spring.kafka.listener.ack-count=10

#设置消费的线程数
spring.kafka.listener.concurrency=8
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#=============== provider  =======================

spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


